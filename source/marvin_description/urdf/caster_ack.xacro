<?xmln version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="caster_horizontal_x" value="0.040" />
  <xacro:property name="caster_horizontal_y" value="0.045" />
  <xacro:property name="caster_horizontal_z" value="0.020" />
  <xacro:property name="caster_horizontal_weight" value="0.03834" />

  <xacro:property name="caster_vertical_x" value="0.040" />
  <xacro:property name="caster_vertical_y" value="0.020" />
  <xacro:property name="caster_vertical_z" value="0.110" />
  <xacro:property name="caster_vertical_weight" value="0.09371" />

  <xacro:property name="axle_radius" value="0.015" />
  <xacro:property name="axle_length" value="0.030" />
  <xacro:property name="axle_weight" value="0.160" />

  <xacro:macro name="caster" params="prefix suffix reflect_x reflect_y turn">
    <link name="${prefix}_${suffix}_caster_horizontal">
      <xacro:default_inertial mass="${caster_horizontal_weight}" />
      <visual>
        <origin xyz="0 0.0 0.0" />
        <geometry>
          <box
            size="
                        ${caster_horizontal_x}
                        ${caster_horizontal_y}
                        ${caster_horizontal_z}" />
        </geometry>
        <material name="blue" />
      </visual>
      <collision>
        <origin xyz="0 0.0 0.0" />
        <geometry>
          <box
            size="
                        ${caster_horizontal_x}
                        ${caster_horizontal_y}
                        ${caster_horizontal_z}" />
        </geometry>
        <material name="blue" />
      </collision>
    </link>

    <xacro:if value="${turn == True}">
      <joint name="${prefix}_${suffix}_caster_to_shoulder" type="revolute">
        <origin
          xyz="
           0
           ${reflect_y * (shoulder_vertical_y / 2 + shoulder_horizontal_y / 2 + main_link_y / 2
           + caster_horizontal_y / 2 + caster_vertical_y / 2)}
           0" />
        <parent link="front_axle" />
        <child link="${prefix}_${suffix}_caster_horizontal" />
        <axis xyz="0 0 1" />
        <limit lower="${-wheel_turn}" upper="${wheel_turn}" effort="10" velocity="10" />
      </joint>

      <!-- Transmission for ros_control-->
      <transmission name="${prefix}_steer_tran">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_front_caster_shoulder">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_steer_motor">
          <hardwareInterface>EffortJointInterface</hardwareInterface>
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
      </transmission>
    </xacro:if>

    <xacro:if value="${turn == False}">
      <joint name="${prefix}_${suffix}_caster_to_shoulder" type="fixed">
        <origin
          xyz="
           0
           ${reflect_y * (shoulder_vertical_y / 2 + shoulder_horizontal_y / 2 + main_link_y / 2
           + caster_horizontal_y / 2 + caster_vertical_y / 2)}
           0
        " />
        <parent link="back_axle" />
        <child link="${prefix}_${suffix}_caster_horizontal" />
        <axis xyz="0 0 1" />
      </joint>
    </xacro:if>

    <link name="${prefix}_${suffix}_caster_vertical">
      <xacro:default_inertial mass="${caster_vertical_weight}" />
      <visual>
        <origin xyz="0.0 0.0 0.0" />
        <geometry>
          <box
            size="
                        ${caster_vertical_x}
                        ${caster_vertical_y}
                        ${caster_vertical_z}" />
        </geometry>
        <material name="green" />
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" />
        <geometry>
          <box
            size="
                        ${caster_vertical_x}
                        ${caster_vertical_y}
                        ${caster_vertical_z}" />
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_${suffix}_caster_joint" type="fixed">
      <origin
        xyz="
                0
                ${-reflect_y * (caster_horizontal_y/2 + caster_vertical_y/2)}
                ${-1 * (caster_vertical_z/2 - caster_horizontal_z/2) }" />
      <parent link="${prefix}_${suffix}_caster_horizontal" />
      <child link="${prefix}_${suffix}_caster_vertical" />
    </joint>

    <link name="${prefix}_${suffix}_axle">
      <xacro:default_inertial mass="${axle_weight}" />
      <visual>
        <origin rpy="${pi/2} 0.0 0.0" />
        <geometry>
          <cylinder radius="${axle_radius}" length="${axle_length}" />
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin rpy="${pi/2} 0.0 0.0" />
        <geometry>
          <cylinder radius="${axle_radius}" length="${axle_length}" />
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_${suffix}_axle_to_caster" type="fixed">
      <origin
        xyz="
                0
                0
                ${-1 * (caster_vertical_z/2 - axle_radius)}" />
      <parent link="${prefix}_${suffix}_caster_vertical" />
      <child link="${prefix}_${suffix}_axle" />
    </joint>

    <xacro:wheel prefix="${prefix}" suffix="${suffix}" reflect_y="${reflect_y}" />
  </xacro:macro>
</robot>
